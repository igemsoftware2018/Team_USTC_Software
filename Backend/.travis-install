#!/bin/bash

mkdir _download

# Install a specific version of elasticsearch
if [ ! -f _download/es2.deb ]; then
    wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/2.4.6/elasticsearch-2.4.6.deb -O _download/es2.deb
fi
sudo dpkg -i --force-confnew _download/es2.deb
sudo service elasticsearch start

pip install -r requirements/dev.txt
pip install -r requirements/abacus-server.txt

cat > config.json << EOF
{
    "DATABASE": {
        "NAME": "biohub_new",
        "USER": "root",
        "PASSWORD": "",
        "HOST": "localhost",
        "PORT": "3306",
        "TEST": {
            "NAME": "test_biohub_new",
            "CHARSET": "utf8",
            "COLLATION": "utf8_general_ci",
            "MIRROR": null
        }
    },
    "PLUGINS": ["biohub.abacus", "biohub.biocircuit", "biohub.biomap"],
    "TIMEZONE": "UTC",
    "UPLOAD_DIR": "/tmp/biohub",
    "REDIS_URI": "redis://localhost:6379",
    "THROTTLE": {
        "post": 0,
        "experience": 0,
        "rate": 0,
        "vote": 0,
        "register": 0
    }
}
EOF

python biohub-cli.py init
if [$? -ne 0 ]; then
    exit 1
fi

python -c "import os;os.chdir('biohub/biocircuit');from espresso import espresso"
if [ $? -ne 0 ]; then
    exit 1
fi


# # Ensure biobricks.sql is ready
# if [ ! -f tmp/biobricks.sql ]; then
#     wget http://parts.igem.org/partsdb/download.cgi?type=parts_sql -O tmp/biobricks.sql.gz
#     gunzip tmp/biobricks.sql.gz -k -f
# fi

# # Database preparation

# # The line below is necessary as test command needs production database to be existed
# mysql -uroot -e 'CREATE DATABASE IF NOT EXISTS igem;'
# mysql -uroot -e 'CREATE DATABASE IF NOT EXISTS biohub_new character set utf8;'
# mysql -uroot igem < tmp/biobricks.sql
# biohub/biobrick/bin/updateparts.py -c 1000

# biohub/manage.py migrate
# biohub/manage.py refreshweight
# time biohub/manage.py update_index -k 4
# time biohub/manage.py installgraph


cat > biohub/abacus/config.json << EOF2
{
    "ABACUS_JAR_PATH": "$PWD/tests/abacus/FakeAbacus/bin/FakeAbacus.jar",
    "ABACUS_DATABASE_PATH": "$PWD/config.json",
    "ABACUS_REMOTE_SERVERS": [
        "http://localhost:46135/",
        "http://localhost:46136/"
    ]
}
EOF2

cat > abacus_server/config.json << EOF3
{
    "ABACUS_JAR_PATH": "$PWD/tests/abacus/FakeAbacus/bin/FakeAbacus.jar",
    "REDIS_URI": "redis://localhost:6379",
    "ABACUS_DATABASE_PATH": "$PWD/config.json",
    "STORAGE_ROOT": "/tmp/abacus_server/"
}
EOF3

# Start up abacus remote server
nohup python -m abacus_server --port 46135 &
nohup python -m abacus_server --port 46136 &
sleep 3
cat nohup.out
